; Configuration variables for PhysX

[PhysX]
    ;# {GPUEnabled} {} {This controls whether the GPU will be used in the
    ;physics calculations}
    ;; This is a boolean value that will default in the code to false when no
    ;value is assigned inside of this file
    ;; The default value of this variable in this file is false
    GPUEnabled = false

    ;# {CPUMaxThreads} {} {The number of threads the CPU will use when handling
    ;physics calculations}
    ;; This value is a positive integer that should be limited by the hardware 
    ;of your machine
    ;; Using too many threads or too few can cause slower physics calculations
    ;; Zero will force PhysX to run on the same thread as the wrapper
    ;; The default value of this variable in this file is 2
    ;; The default value if no value is given in this file is 1
    CPUMaxThreads = 2

    ;# {AvatarStandingFriction} {} {The friction value used as the default for
    ;avatars}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for the avatar
    ;; The default value in this file and in the program is 0.95
    AvatarStandingFriction = 0.95

    ;# {AvatarDensity} {} {The default density value used for new avatars}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for the avatar
    ;; The default value in this file and in the program is 3500.0
    AvatarDensity = 3500.0

    ;# {AvatarCapsuleWidth} {} {The default capsule width for new avatars}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for the avatar
    ;; The default value in this file and in the program is 0.6
    AvatarCapsuleWidth = 0.6

    ;# {AvatarCapsuleDepth} {} {The default capsule depth for new avatars}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for the avatar
    ;; The default value in this file and in the program is 0.45
    AvatarCapsuleDepth = 0.45

    ;# {AvatarJitterFix} {} {This determines if a small scale avatar will
    ;enlarge the capsule around it to prevent avatar jitter}
    ;; This is a boolean value where true will create a larger capsule around
    ;small scale avatars to prevent the avatar from jittering when walking
    ;across the terrain
    ;; The default value in this file and in the program is true
    AvatarJitterFix = true

    ;# {PrimFriction} {} {The default friction for primitives}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for primitives
    ;; The default value in this file and in the program is 0.2
    PrimFriction = 0.2

    ;# {PrimDensity} {} {The default density for primitives}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for primitives
    ;; The default value in this file and in the program is 1000.0006836
    PrimDensity = 1000.0006836

    ;# {PrimRestitution} {} {The default restitution for primitives}
    ;; This value is a valid float in c# that will be used in physics
    ;calculations for primitives
    ;; The default value in this file and in the program is 0.0
    PrimRestitution = 0.0

    ;# {MaxUpdates} {} {The number of updates that will be allowed to pass from
    ;the PhysXWrapper to the PhysXPlugin of OpenSim}
    ;; This value is a valid integer that will be used as the size of the array
    ;pinned to memory for passing of physical object updates
    ;; The default value for this file and for the code is 8192
    MaxUpdates = 8192

    ;# {MaxCollisions} {} {The number of collisions that will be allowed to 
    ;pass from the PhysXWrapper to the PhysXPlugin of OpenSim}
    ;; This value is a valid integer that will be used as the size of the array
    ;pinned to memory for passing of physical object collisions
    ;; The default value for this file and for the code is 8192
    ;; With 5000 spheres being spawned inside of the ball pit collisions jump
    ;to nearly 14000 per frame
    MaxCollisions = 8192

    ;# {HeightFieldScaleFactor} {} {The scale factor to be used on height
    ;field height values
    ;; Height field values are stored as integers by PhysX, so a scale factor
    ;can be used to preserve some precision
    ;A smaller value preserves more precision, but allows for a smaller range
    ;of height values
    ;; This value must be greater than 0. A value greater than 1 will
    ;result in loss of precision
    ;; The default scale factor is 0.01
    HeightFieldScaleFactor = 0.01

    ;@ {ReportNonAvatarCollisions} {} {Indicates whether collisions not
    ;involving avatars should be reported to the simulator
    ;; This is a boolean value where true will report all collisions and false
    ;will only report collisions involving avatars
    ReportNonAvatarCollisions = false

